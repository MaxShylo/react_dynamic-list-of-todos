{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedId","onSelect","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","onVisible","useState","sortBy","setSortBy","query","setQuery","useEffect","sortedTodos","filter","includes","toLowerCase","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","catch","error","Error","TodoModal","selectedTodo","user","setUser","loadUser","a","userId","href","email","name","App","setTodos","visibleTodos","setVisibleTodos","setSelectedTodo","selectedTodoId","setSelectedTodoId","loadTodos","todosFromServer","handleSelectTodo","visible","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c5eeb90.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedId: number,\n  onSelect: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedId,\n  onSelect,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedId === todo.id,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={`has-text-${todo.completed ? 'success' : 'danger'}`}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={`far fa-eye${selectedId === todo.id ? '-slash' : ''}`}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onVisible: (visible: Todo[]) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  todos,\n  onVisible,\n}) => {\n  const [sortBy, setSortBy] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    let sortedTodos;\n\n    switch (sortBy) {\n      case 'active':\n        sortedTodos = todos.filter(todo => todo.completed === false);\n\n        break;\n      case 'completed':\n        sortedTodos = todos.filter(todo => todo.completed === true);\n\n        break;\n      default:\n        sortedTodos = [...todos];\n    }\n\n    sortedTodos = sortedTodos.filter(todo => {\n      return todo.title.includes(query.toLowerCase());\n    });\n\n    onVisible(sortedTodos);\n  }, [sortBy, query]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={sortBy}\n            onChange={(event) => setSortBy(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setSortBy('all');\n                setQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json())\n    .catch(error => {\n      throw new Error(error);\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo,\n  onSelect: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onSelect,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadUser = async () => {\n    setUser(await getUser(selectedTodo.userId));\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, [selectedTodo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelect(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">\n                  Done\n                </strong>\n              ) : (\n                <strong className=\"has-text-danger\">\n                  Planned\n                </strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\n\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n\n  const loadTodos = async () => {\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n    setVisibleTodos(todosFromServer);\n  };\n\n  const handleSelectTodo = (todo: Todo | null) => {\n    if (!todo) {\n      setSelectedTodoId(0);\n    } else {\n      setSelectedTodoId(todo.id);\n    }\n\n    setSelectedTodo(todo);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                onVisible={(visible: Todo[]) => setVisibleTodos(visible)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {(todos.length > 0)\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedId={selectedTodoId}\n                    onSelect={handleSelectTodo}\n                  />\n                ) : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onSelect={handleSelectTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}